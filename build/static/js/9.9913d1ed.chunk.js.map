{"version":3,"sources":["components/Layout/Container/ContainerComponent.js","components/Quote/QuoteComponent.js"],"names":["ContainerComponent","props","fullWidth","className","children","parseCookies","cookies","list","split","forEach","cookie","parts","shift","trim","decodeURI","join","hostname","window","location","origin","QuoteComponent","ipmConfigID","URLSearchParams","search","get","useState","status","msg","loading","setLoader","config","setConfig","message","infoObj","setInfo","loaderProps","active","withOverlay","small","description","headers","Authorization","document","jwttoken","useEffect","axios","then","response","data","errorMessage","resetInfo","catch","error","console","log","finally","closeLoader","info","hasOwnProperty","orderReferenceNumber","renderStatusMessages","errorCode","md","light","inline","onClick","redirectURL","url","decodeURIComponent","assign","handleEdit","contacts","sm","lg","firstName","lastName","email","provisioning","Object","keys","map","provisionField","index","key","billing","terms","title","items","item","partIdentifier","attributes","item_qty","pricingEstimate","debit","suggestedEndCustomerPrice","currency","totalPrice","disabled","tooltipAlignment","style","float","post","handleCreateOrder"],"mappings":"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","file":"static/js/9.9913d1ed.chunk.js","sourcesContent":["import React from \"react\";\nimport { Grid } from \"carbon-components-react\";\nimport \"./Container.scss\";\n\nexport default function ContainerComponent(props) {\n  const { fullWidth } = props;\n\n  return (\n    <Grid fullWidth={fullWidth} className=\"container\">\n      {props.children}\n    </Grid>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Quote.css\";\nimport { ArrowLeft32 } from \"@carbon/icons-react\";\nimport { Loading } from \"carbon-components-react\";\nimport {\n  Grid,\n  Row,\n  Column,\n  Button,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableContainer,\n  TableBody,\n  TableCell,\n  Tile,\n  Link,\n} from \"carbon-components-react\";\nimport ContainerComponent from \"./../Layout/Container/ContainerComponent\";\n\nconst parseCookies = (cookies) => {\n  let list = {};\n\n  cookies &&\n    cookies.split(\";\").forEach(function (cookie) {\n      const parts = cookie.split(\"=\");\n      list[parts.shift().trim()] = decodeURI(parts.join(\"=\"));\n    });\n\n  return list;\n};\n\nconst hostname =\n  process.env.NODE_ENV === \"development\"\n    ? \"http://localhost:3000\"\n    : window.location.origin;\n\nexport default function QuoteComponent(props) {\n  const searchParams = new URLSearchParams(props.location.search);\n  const ipmConfigID = searchParams.get(\"ipmConfigID\");\n\n  const [loading, setLoader] = useState({\n    status: true,\n    msg: \"Preparing quote... please wait! \",\n  });\n  const [config, setConfig] = useState({});\n  const [infoObj, setInfo] = useState({ status: null, message: \"\" });\n\n  const loaderProps = {\n    active: true,\n    withOverlay: true,\n    small: false,\n    description: \"Loader\",\n    className: \"loader\",\n  };\n\n  const cookies = parseCookies(document.cookie);\n  const { jwttoken } = cookies;\n\n  const headers = {\n    Authorization: \"Bearer \" + jwttoken,\n  };\n\n  useEffect(() => {\n    const hostname =\n      process.env.NODE_ENV === \"development\"\n        ? \"http://localhost:3000\"\n        : window.location.origin;\n\n    axios\n      .get(`${hostname}/partner/quote/data?ipmConfigID=` + ipmConfigID, {\n        headers,\n      })\n      .then((response) => {\n        if (response.data.errorMessage) {\n          setInfo({\n            status: \"error\",\n            message: response.data.errorMessage,\n            data: response.data,\n          });\n        } else {\n          resetInfo();\n          setConfig(response.data);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => {\n        closeLoader();\n      });\n  }, []);\n\n  const closeLoader = () => {\n    setLoader({ status: false, msg: \"\" });\n  };\n\n  const resetInfo = () => {\n    setInfo({\n      status: null,\n      message: \"response.data.errorMessage}\",\n      data: null,\n    });\n  };\n\n  const handleCreateOrder = (ipmConfigID) => {\n    setLoader({ status: true, msg: \"Creating order... please wait!\" });\n\n    axios\n      .post(`${hostname}/partner/product/order/${ipmConfigID}`, {\n        headers,\n      })\n      .then((response) => {\n        if (response.data.errorMessage) {\n          setInfo({\n            status: \"error\",\n            message: response.data.errorMessage,\n            data: response.data,\n          });\n        } else {\n          setInfo({\n            status: \"success\",\n            message: response.data.message,\n            data: response.data,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => {\n        closeLoader();\n      });\n  };\n\n  const handleEdit = () => {\n    const cookies = parseCookies(document.cookie);\n    const { redirectURL, jwttoken } = cookies;\n\n    if (redirectURL && jwttoken) {\n      const url = decodeURIComponent(redirectURL);\n      window.location.assign(url + \"&tk=\" + jwttoken);\n    }\n  };\n\n  const buttonProps = () => {\n    return {\n      disabled: infoObj.status,\n      tooltipAlignment: \"center\",\n      style: { float: \"right\" },\n      onClick: () => handleCreateOrder(ipmConfigID),\n    };\n  };\n\n  const backLinkProps = () => {\n    return {\n      className: \"back--link\",\n      inline: true,\n      onClick: () => handleEdit(props, ipmConfigID),\n    };\n  };\n\n  const renderStatusMessages = (info) => {\n    if (info.status) {\n      switch (true) {\n        case info.data.hasOwnProperty(\"orderReferenceNumber\"):\n          return (\n            <div className={`${info.status}--status info--section`}>\n              <span>\n                Order number {info.data.orderReferenceNumber} has been created\n                succesfully!\n              </span>\n            </div>\n          );\n        default:\n          return (\n            <div className={`${info.status}--status info--section`}>\n              <span>{info.message}</span>\n            </div>\n          );\n      }\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <ContainerComponent>\n      <div className=\"margin-top25\">\n        <h3 className=\"quote--title\">\n          {loading.status ? loading.msg : \"Quote\"}\n        </h3>\n      </div>\n      {renderStatusMessages(infoObj)}\n      {loading.status ? (\n        <Loading {...loaderProps} />\n      ) : infoObj.data?.errorCode === \"MP1808E\" ? null : (\n        <Grid>\n          <Row>\n            <Column md={12} className=\"margin-top25\">\n              <Tile light={true}>\n                <Link {...backLinkProps()}>\n                  <ArrowLeft32 />\n                  <span>Back</span>\n                </Link>\n              </Tile>\n            </Column>\n          </Row>\n          {config.contacts ? (\n            <Row>\n              <Column sm={12} md={12} lg={12} className=\"margin-top25\">\n                <Tile>\n                  <h4>Contact</h4>\n                </Tile>\n              </Column>\n              <Column md={2}>\n                <Tile light={true}>\n                  <span>\n                    Name:{\" \"}\n                    {config.contacts.firstName + \" \" + config.contacts.lastName}\n                  </span>\n                </Tile>\n              </Column>\n              <Column md={2}>\n                <Tile light={true}>\n                  <span>Email: {config.contacts.email} </span>\n                </Tile>\n              </Column>\n            </Row>\n          ) : null}\n\n          <>\n            {config.provisioning ? (\n              <Row>\n                <Column sm={12} md={12} lg={12} className=\"margin-top25\">\n                  <Tile>\n                    <h4>Provision Details</h4>\n                  </Tile>\n                </Column>\n                {Object.keys(config.provisioning).map(\n                  (provisionField, index) => (\n                    <Column md={2} key={index}>\n                      <Tile light={true}>\n                        <span>\n                          {provisionField}:{config.provisioning[provisionField]}\n                        </span>\n                      </Tile>\n                    </Column>\n                  )\n                )}\n              </Row>\n            ) : null}\n            <Row>\n              <Column sm={12} md={12} lg={12} className=\"margin-top25\">\n                <Tile>\n                  <h4>Other Details</h4>\n                </Tile>\n              </Column>\n              <Column md={2}>\n                <Tile light={true}>\n                  <span>IBM Configuration ID: {config.ipmConfigID}</span>\n                </Tile>\n              </Column>\n              <Column md={2}>\n                <Tile light={true}>\n                  <span>Billing Terms: {config.billing}</span>\n                </Tile>\n              </Column>\n              <Column md={2}>\n                <Tile light={true}>\n                  <span>Subscription Terms: {config.terms}</span>\n                </Tile>\n              </Column>\n            </Row>\n            <Row>\n              <Column>\n                <TableContainer className=\"margin-top25\" title=\"Summary\">\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableHeader>ID</TableHeader>\n                        <TableHeader>Quantity</TableHeader>\n                        <TableHeader>Price</TableHeader>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {config.items?.map((item, index) => (\n                        <TableRow key={index}>\n                          <TableCell>{item.partIdentifier}</TableCell>\n                          <TableCell>{item.attributes.item_qty}</TableCell>\n                          <TableCell>\n                            {item.pricingEstimate.debit\n                              .suggestedEndCustomerPrice\n                              ? item.pricingEstimate.debit\n                                  .suggestedEndCustomerPrice +\n                                \" \" +\n                                config.currency\n                              : \"Free\"}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Column>\n            </Row>\n            <Row className=\"margin-top25\">\n              <Column lg={8}></Column>\n              <Column lg={2}>\n                <span className=\"total--price\">\n                  Total price: {config.totalPrice} {config.currency}\n                </span>\n              </Column>\n              <Column lg={2}>\n                <Button {...buttonProps()}>Create Order</Button>\n              </Column>\n            </Row>\n          </>\n        </Grid>\n      )}\n    </ContainerComponent>\n  );\n}\n"],"sourceRoot":""}